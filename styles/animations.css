/* Animated Background */
.animated-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    background: linear-gradient(45deg, #1a3b20, #2c5530);
    overflow: hidden;
}

.gradient-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(circle at center, transparent 0%, rgba(0,0,0,0.7) 100%);
}

/* Floating Elements */
.floating-elements {
    position: absolute;
    width: 100%;
    height: 100%;
}

.element {
    position: absolute;
    color: rgba(255, 255, 255, 0.15);
    font-family: 'Playfair Display', serif;
    font-size: clamp(1.5rem, 3vw, 3rem);
    user-select: none;
    transition: all 0.3s ease-out;
    cursor: default;
}

/* Shine effect on hover */
@keyframes shine {
    0% {
        color: rgba(255, 255, 255, 0.15);
        text-shadow: none;
    }
    50% {
        color: rgba(255, 255, 255, 0.9);
        text-shadow: 0 0 15px rgba(255, 255, 255, 0.5),
                    0 0 30px rgba(255, 255, 255, 0.3);
    }
    100% {
        color: rgba(255, 255, 255, 0.15);
        text-shadow: none;
    }
}

.element:hover {
    animation: shine 1.5s ease-in-out;
    cursor: pointer;
}

/* Floating Animation */
@keyframes float {
    0% {
        transform: translate(0, 0) rotate(0deg);
    }
    33% {
        transform: translate(10px, -10px) rotate(2deg);
    }
    66% {
        transform: translate(-10px, 10px) rotate(-2deg);
    }
    100% {
        transform: translate(0, 0) rotate(0deg);
    }
}

.element:nth-child(odd) {
    animation: float 8s ease-in-out infinite;
}

.element:nth-child(even) {
    animation: float 10s ease-in-out infinite reverse;
}

/* Generate random positions for elements */
.element:nth-child(1) { top: 15%; left: 20%; }
.element:nth-child(2) { top: 45%; left: 75%; }
.element:nth-child(3) { top: 75%; left: 30%; }
.element:nth-child(4) { top: 25%; left: 60%; }
.element:nth-child(5) { top: 85%; left: 80%; }
.element:nth-child(6) { top: 35%; left: 40%; }
.element:nth-child(7) { top: 65%; left: 15%; }
.element:nth-child(8) { top: 55%; left: 50%; }
.element:nth-child(9) { top: 15%; left: 85%; }
.element:nth-child(10) { top: 90%; left: 45%; }

/* Add particle effect */
.animated-background::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background-image: radial-gradient(circle at center, #ffffff 1px, transparent 1px);
    background-size: 50px 50px;
    opacity: 0.05;
    animation: particleMove 20s linear infinite;
}

@keyframes particleMove {
    0% { transform: translateY(0); }
    100% { transform: translateY(-50px); }
}

/* Mouse interaction effect */
/* Remove or modify the existing moving class since we're using a new hover effect */

/* Add mouse parallax effect */
document.addEventListener('mousemove', (e) => {
    const moveX = (e.clientX - window.innerWidth / 2) * 0.005;
    const moveY = (e.clientY - window.innerHeight / 2) * 0.005;
    document.querySelector('.floating-elements').style.transform = 
        `translateZ(-50px) rotateX(${moveY}deg) rotateY(${-moveX}deg)`;
});

/* Network/Grid Effect */
.network-grid {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
        linear-gradient(rgba(44, 85, 48, 0.1) 1px, transparent 1px),
        linear-gradient(90deg, rgba(44, 85, 48, 0.1) 1px, transparent 1px);
    background-size: 50px 50px;
    transform-style: preserve-3d;
    animation: gridMove 20s linear infinite;
}

@keyframes gridMove {
    0% {
        transform: perspective(500px) rotateX(60deg) translateY(0);
    }
    100% {
        transform: perspective(500px) rotateX(60deg) translateY(50px);
    }
}

/* Floating Particles */
.particles {
    position: absolute;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

.particle {
    position: absolute;
    width: 2px;
    height: 2px;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    animation: particleFloat 15s infinite linear;
}

@keyframes particleFloat {
    0% {
        transform: translate(0, 0) rotate(0deg);
    }
    100% {
        transform: translate(100px, -100px) rotate(360deg);
    }
} 